openapi: '3.0.0'

# =============================================================================

info:
  title: 'Core Microservice'
  description: >
    Part of the **Seedy FIUBA Project** ([view it on GitHub](https://github.com/orgs/SeedyFiuba-G8/)).
  version: '1.0.0'

# =============================================================================

servers:
  - url: https://sf-tdp2-core.herokuapp.com/
    description: 'Production'
  - url: https://sf-tdp2-core-dev.herokuapp.com/
    description: 'Staging'
  - url: http://localhost:3000/
    description: 'Local development'

# =============================================================================

tags:
  - name: Projects

# =============================================================================

paths:
  # PROJECTS
  /projects:
    get:
      summary: Get all projects (optionally, of a specified user) ordered by creation date
      description: Get info from every project (of the app/of the user) ordered by creation date.
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: string
          description: The userId of whom we want to retrieve projects.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: The number of projects to be retrieved.
        - in: query
          name: offset
          required: false
          schema:
            type: integer
          description: The number of projects we want to take as offset.
      tags:
        - Projects
      responses:
        200:
          $ref: '#/components/responses/getProjects'
        default:
          $ref: '#/components/responses/Error'

    post:
      summary: Create a new project
      description: Allows an entrepeneur user to create a new project.
      tags:
        - Projects
      parameters:
        - in: header
          name: uid
          schema:
            type: string
            format: uuid
          required: true
          description: uuid of the user that requests
      requestBody:
        $ref: '#/components/requestBodies/postProject'
      responses:
        200:
          $ref: '#/components/responses/postProject'
        default:
          $ref: '#/components/responses/Error'

  /projects/{projectId}:
    get:
      summary: Get a project by id.
      description: Allos a user to get retrieve a project's information by its id.
      tags:
        - Projects
      parameters:
        - in: path
          name: projectId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
          description: uuid of the project to retrieve
      responses:
        200:
          $ref: '#/components/responses/getProject'
        default:
          $ref: '#/components/responses/Error'

    patch:
      summary: Modify the information of the project.
      description: Allows an owner of a project or an admin to modify the information of a project.
      tags:
        - Projects
      parameters:
        - in: header
          name: uid
          schema:
            $ref: '#/components/schemas/Id'
          required: true
          description: uuid of the user that requests
        - in: path
          name: projectId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
          description: uuid of the project to modify
      requestBody:
        $ref: '#/components/requestBodies/patchProject'
      parameters:
        - in: path
          name: projectId
          schema:
            type: string
          required: true
          description: uuid of the project to modify
      responses:
        200:
          $ref: '#/components/responses/patchProject'
        default:
          $ref: '#/components/responses/Error'

    delete:
      summary: Delete a project by id.
      description: Allows an owner of a project or an admin to delete a project.
      tags:
        - Projects
      parameters:
        - in: header
          name: uid
          schema:
            $ref: '#/components/schemas/Id'
          required: true
          description: uuid of the user that requests
        - in: path
          name: projectId
          schema:
            $ref: '#/components/schemas/Id'
          required: true
          description: uuid of the project to delete
      responses:
        200:
          $ref: '#/components/responses/deleteProject'
        default:
          $ref: '#/components/responses/Error'

  # STATUS
  /health:
    get:
      tags:
        - Status
      responses:
        200:
          $ref: '#/components/responses/health'
        default:
          $ref: '#/components/responses/Error'

  /ping:
    get:
      tags:
        - Status
      responses:
        200:
          $ref: '#/components/responses/ping'
        default:
          $ref: '#/components/responses/Error'

# =============================================================================

components:
  # ---------------------------------------------------------------------------
  requestBodies:
    postProject:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostProjectData'

    patchProject:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchProjectData'
  
  # ---------------------------------------------------------------------------
  responses:
    Error:
      description: >
        An error has occured. Check response body for more
        information about what happened.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    # PROJECTS
    getProjects:
      description: Projects info retrieved successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AllProjects'

    getProject:
      description: Project info retrieved successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Project'

    postProject:
      description: Project created successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectId'

    patchProject:
      description: Project modified successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectId'

    deleteProject:
      description: Project deleted successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectId'

    # STATUS
    health:
      description: Microservice general health state reported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Health'

    ping:
      description: Server is active.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ping'

  # ---------------------------------------------------------------------------
  schemas:
    # GENERAL
    Error:
      type: object
      properties:
        status:
          type: integer
        name:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
      required:
        - status
        - name
    
    Date:
      type: string
      format: date-time
      example: '2021-06-13T21:29:29.330Z'

    Id:
      type: string
      format: uuid
      example: '123e4567-e89b-12d3-a456-426614174000'

    # PROJECTS
    AllProjects:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPreview'
      required:
        - projects

    Project:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        userId:
          $ref: '#/components/schemas/Id'
        title:
          type: string
          example: 'Prohibir la utilizacion de Winbugs globalmente'
        description:
          type: string
          example: 'No puede ser que haya gente que use Winbugs'
        type:
          type: string
          example: 'social'
        objective:
          type: string
          example: 'Salvar a la gente de esta maldicion'
        country:
          type: string
          example: 'Argentina'
        city:
          type: string
          example: 'Buenos Aires'
        publishedOn:
          $ref: '#/components/schemas/Date'
        finalizedBy:
          $ref: '#/components/schemas/Date'
        tags:
          $ref: '#/components/schemas/Tags'
      required:
        - id
        - userId
        - title
        - description
        - type
        - objective
        - country
        - city
        - publishedOn
        - finalizedBy
        - tags

    ProjectPreview:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        title:
          type: string
          example: 'Prohibir la utilizacion de Winbugs globalmente'
        description:
          type: string
          example: 'No puede ser que haya gente que use Winbugs'
        type:
          type: string
          example: 'social'
        country:
          type: string
          example: 'Argentina'
        city:
          type: string
          example: 'Buenos Aires'
        finalizedBy:
          $ref: '#/components/schemas/Date'
        tags:
          $ref: '#/components/schemas/Tags'
      required:
        - id
        - title
        - description
        - type
        - objective
        - country
        - city
        - finalizedBy
        - tags

    PostProjectData:
      type: object
      properties:
        title:
          type: string
          example: 'Prohibir la utilizacion de Winbugs globalmente'
        description:
          type: string
          example: 'No puede ser que haya gente que use Winbugs'
        type:
          type: string
          example: 'social'
        objective:
          type: string
          example: 'Salvar a la gente de esta maldicion'
        country:
          type: string
          example: 'Argentina'
        city:
          type: string
          example: 'Buenos Aires'
        finalizedBy:
          $ref: '#/components/schemas/Date'
        tags:
          $ref: '#/components/schemas/Tags'
      required:
        - title
        - description
        - type
        - objective
        - country
        - city
        - finalizedBy

    PatchProjectData:
      type: object
      properties:
        title:
          type: string
          example: 'Prohibir la utilizacion de Winbugs globalmente'
        description:
          type: string
          example: 'No puede ser que haya gente que use Winbugs'
        type:
          type: string
          example: 'social'
        objective:
          type: string
          example: 'Salvar a la gente de esta maldicion'
        country:
          type: string
          example: 'Argentina'
        city:
          type: string
          example: 'Buenos Aires'
        finalizedBy:
          $ref: '#/components/schemas/Date'
        tags:
          $ref: '#/components/schemas/Tags'
      minProperties: 1

    ProjectId:
      type: object
      properties:
        id:
          type: string
          example: '670b9562-b30d-52d5-b827-655787665500'
      required:
        - id

    Tags:
      type: array
      items:
        type: string
      example: ['javascript', 'python', 'food']
    
    # STATUS
    Ping:
      type: object
      properties:
        status:
          type: string
          example: 'ok'
      required:
        - status

    Health:
      type: object
      properties:
        database:
          type: string
          example: 'UP'
      required:
        - database
#
# =============================================================================
